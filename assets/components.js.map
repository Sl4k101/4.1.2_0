{"version":3,"file":"components.js","sources":["../../src/pages/AiSideBar.vue","../../src/components/UploaderElement.vue","../../src/components/UploaderElement.vue","../../src/components/ImageAiResponse.vue","../../src/components/ImageAiResponse.vue","../../src/components/SearchResponse.vue","../../src/components/SearchResponse.vue","../../src/imports/components.ts"],"sourcesContent":["<script lang=\"ts\">\nimport AiChat from '../vue/AiChat';\n\n    export default AiChat;\n</script>\n<template>\n  <EditToolsModal/>\n  <EditToolsUploadModal/>\n  <div id=\"aitopia-container\" v-if=\"this.settings.sidebar_show_icon == true\" class=\"close-sidebar\">\n    <div id=\"aitopia-sidebar\">\n      <div id=\"ai-sidebar\" class=\"ait-flex ait-w-full ait-h-full ait-overflow-hidden\">\n        <div class=\"ait-flex ait-flex-col ait-w-[calc(100%_-_60px)]\" id=\"ait-sidebar-chat\"\n             v-if=\"this.settings.switchbar == 'chat'\">\n          <navigation mode=\"chat\"/>\n          <InnerContentView headerMode=\"example\"/>\n        </div>\n        <div class=\"ait-flex ait-flex-col ait-w-[calc(100%_-_60px)]\" id=\"ait-sidebar-ask\"\n             v-if=\"this.settings.switchbar == 'ask'\">\n          <navigation mode=\"ask\"/>\n          <prompts/>\n          <make-a-review/>\n        </div>\n        <div class=\"ait-flex ait-flex-col ait-w-[calc(100%_-_60px)]\" id=\"ait-sidebar-write\"\n             v-if=\"this.settings.switchbar == 'write'\">\n          <navigation mode=\"write\"/>\n          <write/>\n          <make-a-review/>\n        </div>\n        <div class=\"ait-flex ait-flex-col ait-w-[calc(100%_-_60px)]\" id=\"ait-sidebar-painter\"\n             v-if=\"this.settings.switchbar == 'image'\">\n          <navigation mode=\"image\"/>\n          <painter/>\n          <make-a-review/>\n        </div>\n        <div class=\"ait-flex ait-flex-col ait-w-[calc(100%_-_60px)]\" id=\"ait-sidebar-web_search\"\n             v-if=\"this.settings.switchbar == 'web_search'\">\n          <navigation mode=\"search\"/>\n          <InnerContentView headerMode=\"search\" :needUpgrade=\"this.storage.Sync.plan == 'Free'\"/>\n        </div>\n        <switchbar/>\n      </div>\n      <MakeAReviewModal/>\n      <InviteFriends/>\n    </div>\n  </div>\n  <div id=\"aitopia-sidebar-opener\" class=\"ait-cursor-pointer\"\n       :style=\"(this.settings.sidebar_show_icon === false) ? 'display:none;' : ''\">\n    <div class=\"ai-opener-close\" v-on:click=\"this.elementRemove('#aitopia-sidebar-opener')\">\n      <font-awesome-icon icon=\"fa-solid fa-circle-xmark\" class=\"ait-w-4 ait-h-4\"/>\n    </div>\n    <div class=\"opener-logo\" v-on:click=\"this.sidebarToggle(true, $event)\">\n      <svg-logo name=\"logo\" className=\"ait-w-[45px] ait-h-[45px]\"/>\n    </div>\n  </div>\n  <div style=\"display: none;\" v-if=\"this.settings.search_ask_mode\">\n    <SearchResponse/>\n  </div>\n  <textarea id=\"ait_clipboard\"\n            style=\"position: fixed; bottom: -10px;z-index: -1; height: 1px;width: 1px;font-size: .1px;\">\n</textarea>\n</template>\n","<script lang=\"ts\">\nimport AiChat from '../vue/AiChat'\n\nexport default {\n  extends: AiChat,\n  data() {\n    return {\n      files: [],\n    }\n  },  \n}\n</script>\n<template v-if=\"Uploader\">\n  <input type=\"file\" class=\"ait-uploader\" @change=\"this.Uploader.processFile('.ait-uploader',0,['image/svg+xml','image/jpeg','image/png','application/x-zip-compressed'],(details) => {\n    this.files.push(details);\n  })\">\n  <button @click=\"this.Uploader.processFile('.ait-uploader',4194304)\">Yükle</button>\n  \n  <template v-if=\"this.files\">\n    <div v-for=\"(file,key) in this.files\" class=\"ait-w-full ait-min-w-full\">\n      <file-button :title=\"file.name\" :url=\"file.url\"/>\n      <div class=\"ait-flex ait-w-full ait-p-5\">{{ file.progress }}</div>\n      <div class=\"ait-w-full ait-bg-gray-200 ait-rounded-full ait-h-2.5 ait-mb-4 dark:ait-bg-gray-700\">\n        <div class=\"ait-bg-green-600 ait-h-2.5 ait-rounded-full dark:ait-bg-green-500\" :style=\"'transition: width 2s;'+((file.progress != 100) ? `width:${file.progress}%` : 'width:100%')\"></div>\n      </div>\n    </div>\n  </template>\n</template>\n\n","<script lang=\"ts\">\nimport AiChat from '../vue/AiChat'\n\nexport default {\n  extends: AiChat,\n  data() {\n    return {\n      files: [],\n    }\n  },  \n}\n</script>\n<template v-if=\"Uploader\">\n  <input type=\"file\" class=\"ait-uploader\" @change=\"this.Uploader.processFile('.ait-uploader',0,['image/svg+xml','image/jpeg','image/png','application/x-zip-compressed'],(details) => {\n    this.files.push(details);\n  })\">\n  <button @click=\"this.Uploader.processFile('.ait-uploader',4194304)\">Yükle</button>\n  \n  <template v-if=\"this.files\">\n    <div v-for=\"(file,key) in this.files\" class=\"ait-w-full ait-min-w-full\">\n      <file-button :title=\"file.name\" :url=\"file.url\"/>\n      <div class=\"ait-flex ait-w-full ait-p-5\">{{ file.progress }}</div>\n      <div class=\"ait-w-full ait-bg-gray-200 ait-rounded-full ait-h-2.5 ait-mb-4 dark:ait-bg-gray-700\">\n        <div class=\"ait-bg-green-600 ait-h-2.5 ait-rounded-full dark:ait-bg-green-500\" :style=\"'transition: width 2s;'+((file.progress != 100) ? `width:${file.progress}%` : 'width:100%')\"></div>\n      </div>\n    </div>\n  </template>\n</template>\n\n","<script lang=\"ts\">\nimport {AiApi} from '../classes/AiApi';\nimport {constants} from '../classes/Constants';\nimport {ImageAi} from '../classes/ImageAi';\nimport AiChat from '../vue/AiChat'\n\nexport default {\n  extends: AiChat,\n  props: ['id', 'custom_key', 'class', 'mode'],\n  methods: {\n    regenerateAiImage(value) {\n      const prompt = AiApi.prefixify(AiApi.linkify(value['item'])).replace(/\\n/g, '<br\\/>');\n      this.image_settings.prompt = prompt;\n      return ImageAi.build(this, 'image', this.image_settings.prompt, 'image', null, (value['title'] ?? null), (value['extra_data'] ?? {})).then(this.image_settings.prompt = null);\n    },\n    async downloadImage(url, seed) {\n      this.ai_image_url_downloading = url;\n      await this.downloadUrl(url + '?download', seed + '.png')\n      this.ai_image_url_downloading = '';\n    },\n    setUseAsReference(url: string) {\n      this.changeStorage('image_settings.image', url, false);\n      this.showImagePreviewModal = true;\n\n    },\n    toggleDropdown(id) {\n      this.openDropdowns[id] = !this.openDropdowns[id];\n    },\n    mouseOverImageButtonVisibility(id) {\n      if (this.visibleImageButtons[id]) {\n        return;\n      }\n\n      this.visibleImageButtons[id] = true;\n    },\n    mouseLeaveImageButtonVisibility(id) {\n      if (this.visibleImageButtons[id]) {\n        this.visibleImageButtons[id] = false;\n        this.openDropdowns[id] = false;\n        return;\n      }\n    },\n    toggleEditModal(image) {\n      if (this.showEditToolsModal) {\n        this.showEditToolsModal = false;\n      }\n\n      if (this.showEditToolUploadModal) {\n        this.showEditToolUploadModal = false;\n      }\n\n      const imageJson = JSON.stringify(image);\n      localStorage.setItem('reference_edit_tool_image', imageJson);\n      this.showEditToolsModal = !this.showEditToolsModal;\n    },\n    showUpscaleModal(image) {\n      this.changeStorage('image_settings.action', 'image-upscaling', false);\n      this.selectedTool = this.editToolOptions.find(e => e.id === this.imageUpscalingId);\n      this.upscaleValue = 2;\n      const imageJson = JSON.stringify(image);\n      localStorage.setItem('reference_edit_tool_image', imageJson);\n      this.showEditToolsModal = false;\n      this.showEditToolUploadModal = true;\n    },\n    async generateImageVariations(image) {\n      this.isReferenceImageLoading = true;\n\n      this.changeStorage('image_settings.action', \"reimagine\", false)\n      this.changeStorage('image_settings.image', image?.url, false);\n\n      const responseImage = await ImageAi.build(this, 'image', null, 'image', null, \"reimagine\");\n\n      this.image_settings.prompt = null\n      if (responseImage) {\n        if (typeof responseImage.images != 'undefined') {\n          if (typeof responseImage.images[0] != 'undefined') {\n            if (typeof responseImage.images[0].url != 'undefined') {\n              this.changeStorage('image_settings.image', responseImage.images[0].url, false);\n            }\n          }\n        }\n      }\n      this.isReferenceImageLoading = false;\n    }\n  },\n  data() {\n    return {\n      ai_image_url_downloading: '',\n      openDropdowns: {},\n      visibleImageButtons: {},\n      editToolOptions: constants.editTools,\n      imageUpscalingId: constants.image_upscaling_id,\n    };\n  },\n};\n</script>\n<template v-if=\"this.ai_single\">\n  <template v-if=\"this.ai_single != null\">\n    <template v-if=\"typeof this.ai_single[custom_key] != 'undefined'\">\n      <div :class=\"`ait-h-full ` + this.class\" :id=\"id != null ? id:''\" :data-key=\"custom_key\" v-if=\"this.ai_single[custom_key] != null\">\n        <template v-if=\"this.ai_single[custom_key]\" v-for=\"(value,key) in Object.values(this.ai_single[custom_key])\">\n          <div v-if=\"value\" :aria-details=\"`chat-key-${key}`\" :class=\"(value['role'] == 'system' || value['role'] == 'assistant' ? 'ait-bg-neutral-100 dark:ait-bg-neutral-900 dark:ait-text-gray-200':'')\">\n            <template v-if=\"value['role'] == 'system' || value['role'] == 'assistant'\">\n              <div class=\"ait-flex ait-p-2 ait-text-[10px] dark:ait-text-gray-200 ait-items-center ait-justify-between\">\n                <span class=\"ait-flex ait-items-center ait-space-x-2\"><img class=\"ait-w-4\" src=\"/public/assets/images/gpt.png\" alt=\"gpt-image\"> <span>{{ value['model'] }}</span></span>\n              </div>\n              <div class=\"dark:ait-bg-neutral-900 dark:ait-text-gray-200 ait-px-8 ait-py-4 ai_result_container\">\n                <div :class=\"`ai_result ${value['loading'] ? 'ai_loading':''}`\" v-html=\"AiApi.prefixify(AiApi.linkify(value['item'])).replace(/\\n/g, '<br\\/>')\"></div>\n                <div class=\"ait-flex ait-items-center ait-space-x-2 ait-float-right ait-cursor-pointer\" v-on:click=\"this.Helpers.copyClipboard(value['item'].replace(/<br\\/>/g, '\\n'))\">\n                  <svg-logo className=\"ait-w-3 ait-h-3\" name=\"clipboard\"/>\n                  <span>{{ __(\"copy\") }}</span>\n                </div>\n                <div class=\"ait-clear-both\"></div>\n              </div>\n            </template>\n            <template v-else-if=\"value['role'] == 'limit'\">\n              <div class=\"ait-px-3 ait-py-1 ait-bg-white dark:ait-bg-neutral-800 dark:ait-text-gray-200\">\n                <div class=\"ait-w-2/3 ait-py-4 ait-ml-auto ait-text-right\">\n                  {{ __(\"Your usage limit has been reached. Please upgrade your plan to continue using.\") }}\n                  <button type=\"button\" class=\"ait-text-white ait-bg-green-700 hover:ait-bg-green-800 focus:ait-outline-none focus:ait-ring-4 focus:ait-ring-green-300 ait-font-medium ait-rounded-full ait-text-sm ait-px-5 ait-py-1 ait-text-center ait-ml-5 ait-mr-2 dark:ait-bg-green-600 dark:hover:ait-bg-green-700 dark:focus:ait-ring-green-800 aitopia-pricing\">\n                    {{ __(\"Upgrade\") }}\n                  </button>\n                </div>\n              </div>\n            </template>\n            <template v-else-if=\"value['role'] == 'error'\">\n              <div class=\"ait-px-3 ait-py-1 ait-bg-white dark:ait-bg-neutral-800 ait-text-red-800 dark:ait-text-red-200\">\n                <div class=\"ait-py-4 ait-text-center ait-text-red-800 dark:ait-text-red-200\">\n                  {{ value['item'] }}\n                </div>\n              </div>\n            </template>\n            <template v-else-if=\"value['role'] == 'image'\">\n              <div class=\"ait-p-2 ai_result_container\" :style=\"mode === 'full' && 'max-width: 36rem'\">\n                <div class=\"ait-flex ait-items-center ait-justify-between ait-p-3 ait-space-x-3 ait-border ait-border-neutral-200 dark:ait-border-neutral-600 ait-rounded-xl ait-bg-neutral-100 dark:ait-bg-neutral-900 dark:ait-text-neutral-200\">\n                  <div class=\"\">\n                    <div :class=\"`ai_result ait-pb-3`\" v-html=\"AiApi.prefixify(AiApi.linkify(value['title'] ?? value['item'])).replace(/\\n/g, '<br\\/>')\"></div>\n                    <div v-if=\"value['images']\" :class=\"'ait-flex ait-grid ait-image-mode '+ (value['images'].length > 2 ? 'ait-grid-cols-2' : 'ait-grid-cols-'+value['images'].length)\">\n                      <div v-for=\"(image) in value['images']\" @mouseover=\"mouseOverImageButtonVisibility(image.url)\" @mouseleave=\"mouseLeaveImageButtonVisibility(image.url)\" class=\"ait-relative\">\n                        <template v-if=\"image.url\">\n                          <img :src=\"image.url\" :title=\"image.seed ?? ''\" :alt=\"image.seed ?? ''\" loading=\"lazy\"/>\n                          <div class=\"ait-flex ait-flex-row ait-absolute ait-top-0 ait-right-0 ait-mt-2 ait-h-[28px]\">\n                            <div v-if=\"visibleImageButtons[image.url]\" class=\"ait-flex ait-justify-end\">\n                              <button @click=\"generateImageVariations(image)\" class=\"ait-variations ait-flex ait-flex-row ait-text-black dark:ait-text-white ait-download-button ait-mr-1 ait-pt-[6px] items-center justify-center ait-text-[10px]\">\n                                <svg-logo class=\"ait-relative\" style=\"line-height: 13px;\" :name=\"'variants_icon'\"/>\n                                {{ __('Variations') }}\n                              </button>\n                              <button @click=\"showUpscaleModal(image)\" style=\"font-size: 10px; margin-right: 2px;padding-top: 6px;\" class=\"ait-flex ait-flex-row ait-text-black dark:ait-text-white ait-download-button\">\n                                <svg-logo class=\"ait-relative\" style=\"line-height: 13px;\" :name=\"'upscale_icon'\"/>\n                                {{ __('Upscale') }}\n                              </button>\n                              <svg-logo className=\"ait-mt-auto ait-h-7 ait-w-6 ait-download-button ait-cursor-pointer\" :name=\"'three_dots_icon'\" @click=\"toggleDropdown(image.url)\"/>\n                            </div>\n\n                            <div v-if=\"openDropdowns[image.url]\" @click.away=\"toggleDropdown(image.url)\" class=\"ait-mt-4 ait-absolute ait-right-0 ait-top-5 ait-z-50 ait-w-48 ait-bg-slate-100 dark:ait-bg-neutral-700 ait-rounded-md ait-shadow-lg\">\n                              <div @click=\"downloadImage(image.url, image.seed)\" class=\"ait-flex ait-flex-row ait-px-4 ait-py-2 ait-text-sm ait-text-black dark:ait-text-white hover:ait-bg-gray-300 hover:dark:ait-bg-neutral-800 ait-rounded-lg ait-cursor-pointer\">\n                                <svg-logo class=\"ait-ml-[2px] ait-mr-1 ait-mt-[1px]\" :name=\"'download_icon'\"/>\n                                {{ __('Download') }}\n                              </div>\n                              <div @click=\"setUseAsReference(image.url)\" class=\"ait-flex ait-flex-row ait-px-4 ait-py-2 ait-text-sm ait-text-black dark:ait-text-white hover:ait-bg-gray-300 hover:dark:ait-bg-neutral-800 ait-rounded-lg ait-cursor-pointer\">\n                                <svg-logo class=\"ait-ml-[2px] ait-mr-1 ait-mt-[1px]\" :name=\"'use_as_reference_icon'\"/>\n                                {{ __('Use as reference') }}\n                              </div>\n                              <div class=\"ait-flex ait-flex-row ait-px-4 ait-py-2 ait-text-sm ait-text-black dark:ait-text-white hover:ait-bg-gray-300 hover:dark:ait-bg-neutral-800 ait-rounded-lg ait-cursor-pointer\" @click=\"toggleEditModal(image)\">\n                                <svg-logo class=\"ait-mr-1 ait-mt-[1px] ait-white\" :name=\"'edit_icon'\"/>\n                                {{ __('Editing Tools') }}\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div v-if=\"ai_image_url_downloading === '' && visibleImageButtons[image.url]\">\n                              <button @click=\"downloadImage(image.url, image.seed)\" class=\"ait-absolute ait-bottom-[10px] ait-text-black dark:ait-text-white ait-download-button\">\n                                {{ __('Download') }}\n                              </button>\n                            </div>\n                            <div v-if=\"ai_image_url_downloading === image.url && visibleImageButtons[image.url]\">\n                              <button disabled class=\"ait-absolute ait-bottom-[10px] ait-text-black dark:ait-text-white ait-download-button\">\n                                {{ __('Downloading') }}\n                              </button>\n                            </div>\n                            <div>\n                              <!--\n                            <button v-for=\"(item) in this.image_editing\" @click=\"this.changeStorage('image_settings.action', item.id, false);this.changeStorage('image_settings.image', image.url, false);ImageAi.build(this,'image',(this.image_settings.prompt ?? ''), 'image',null);\" class=\"ait-text-white ait-download-button ait-text-xs\">\n                              {{ item.name }}\n                            </button>\n                            -->\n                            </div>\n                          </div>\n\n\n                        </template>\n                      </div>\n                    </div>\n                    <button v-if=\"(value['loading'] == false)\" class=\"ait-flex ait-rounded-full hover:ait-bg-[var(--ait-tab-menu-active-bg-color)] dark:hover:ait-bg-[var(--ait-tab-menu-active-bg-color)] hover:ait-text-white ait-px-1 ait-mt-3 ait-whitespace-nowrap\" @click=\"regenerateAiImage(value)\">\n                      <div class=\"ait-flex ait-flex-row ait-mt-2 ait-mx-auto hover:ait-text-white ait-regenerate\">\n                        <svg-logo className=\"ait-mb-2\" name=\"regenerate_icon\"/>\n                        <div class=\"ait-ml-1 ait-pb-2\">\n                          {{ __(`Regenerate`) }}\n                        </div>\n                      </div>\n                    </button>\n                  </div>\n                </div>\n                <div class=\"ait-flex ait-flex-row ait-mt-2 ait-ml-1\" v-if=\"value['loading']\">\n                  <div :class=\"`${value['loading'] ? 'ai_loading':''}`\"/>\n                  <div class=\"ait-ml-5\">\n                    {{ __(`Generating...`) }}\n                  </div>\n                </div>\n              </div>\n            </template>\n            <template v-else>\n              <div class=\"ait-px-3 ait-py-1 ait-bg-white dark:ait-bg-neutral-800 dark:ait-text-gray-200\">\n                <template v-if=\"Helpers.notUndefined(value,'title')\">\n                  <div class=\"ait-w-2/3 ait-py-4 ait-ml-auto ait-text-right\">\n                    <template v-if=\"(Helpers as any).filenameByFaIcon(value['title'], null) == 'lines'\">\n                      {{ value['title'] }}\n                    </template>\n                    <template v-else>\n                      <file-button :title=\"value['title']\"/>\n                    </template>\n                  </div>\n                </template>\n                <div class=\"ait-w-2/3 ait-py-4 ait-ml-auto ait-text-right\" v-else>\n                  {{ value['item'] }}\n                </div>\n              </div>\n            </template>\n            <div id=\"ait-continue-chat-ai_chat\" class=\"ait-continue-chat ait-flex ait-items-center ait-justify-center ait-absolute ait-w-full\" v-if=\"Helpers.notUndefined(value, 'finish_reason') == 'length'\">\n              <button :data-title=\"__('Continue')\" class=\"ait-text-white hover:ait-bg-green-800 ait-font-small ait-text-md ait-px-3 ait-py-1.5 ait-my-2 ait-rounded-md dark:hover:ait-bg-[var(--ait-tab-menu-active-bg-color)] ait-items-center ait-justify-center\">\n                <div class=\"ait-flex ait-w-full ait-gap-2 ait-items-center ait-justify-center\">\n                  <font-awesome-icon icon=\"fa-solid fa-play\" class=\"ait-h-4 ait-w-4\"/>\n                  {{ __('Continue generating') }}\n                </div>\n              </button>\n            </div>\n          </div>\n        </template>\n        <div id=\"ait-stop-chat-ai_chat\" class=\"ait-stop-chat ait-hide\">\n          <button class=\"ait-text-white hover:ait-bg-green-800 ait-font-medium ait-text-md ait-px-5 ait-py-2 ait-rounded-md dark:hover:ait-bg-[var(--ait-tab-menu-active-bg-color)] \">\n            <div class=\"ait-flex ait-w-full ait-gap-2 ait-items-center ait-justify-center\">\n              <svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon-xs\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n              </svg>\n              {{ __('Stop generating') }}\n            </div>\n          </button>\n        </div>\n      </div>\n    </template>\n  </template>\n</template>\n","<script lang=\"ts\">\nimport {AiApi} from '../classes/AiApi';\nimport {constants} from '../classes/Constants';\nimport {ImageAi} from '../classes/ImageAi';\nimport AiChat from '../vue/AiChat'\n\nexport default {\n  extends: AiChat,\n  props: ['id', 'custom_key', 'class', 'mode'],\n  methods: {\n    regenerateAiImage(value) {\n      const prompt = AiApi.prefixify(AiApi.linkify(value['item'])).replace(/\\n/g, '<br\\/>');\n      this.image_settings.prompt = prompt;\n      return ImageAi.build(this, 'image', this.image_settings.prompt, 'image', null, (value['title'] ?? null), (value['extra_data'] ?? {})).then(this.image_settings.prompt = null);\n    },\n    async downloadImage(url, seed) {\n      this.ai_image_url_downloading = url;\n      await this.downloadUrl(url + '?download', seed + '.png')\n      this.ai_image_url_downloading = '';\n    },\n    setUseAsReference(url: string) {\n      this.changeStorage('image_settings.image', url, false);\n      this.showImagePreviewModal = true;\n\n    },\n    toggleDropdown(id) {\n      this.openDropdowns[id] = !this.openDropdowns[id];\n    },\n    mouseOverImageButtonVisibility(id) {\n      if (this.visibleImageButtons[id]) {\n        return;\n      }\n\n      this.visibleImageButtons[id] = true;\n    },\n    mouseLeaveImageButtonVisibility(id) {\n      if (this.visibleImageButtons[id]) {\n        this.visibleImageButtons[id] = false;\n        this.openDropdowns[id] = false;\n        return;\n      }\n    },\n    toggleEditModal(image) {\n      if (this.showEditToolsModal) {\n        this.showEditToolsModal = false;\n      }\n\n      if (this.showEditToolUploadModal) {\n        this.showEditToolUploadModal = false;\n      }\n\n      const imageJson = JSON.stringify(image);\n      localStorage.setItem('reference_edit_tool_image', imageJson);\n      this.showEditToolsModal = !this.showEditToolsModal;\n    },\n    showUpscaleModal(image) {\n      this.changeStorage('image_settings.action', 'image-upscaling', false);\n      this.selectedTool = this.editToolOptions.find(e => e.id === this.imageUpscalingId);\n      this.upscaleValue = 2;\n      const imageJson = JSON.stringify(image);\n      localStorage.setItem('reference_edit_tool_image', imageJson);\n      this.showEditToolsModal = false;\n      this.showEditToolUploadModal = true;\n    },\n    async generateImageVariations(image) {\n      this.isReferenceImageLoading = true;\n\n      this.changeStorage('image_settings.action', \"reimagine\", false)\n      this.changeStorage('image_settings.image', image?.url, false);\n\n      const responseImage = await ImageAi.build(this, 'image', null, 'image', null, \"reimagine\");\n\n      this.image_settings.prompt = null\n      if (responseImage) {\n        if (typeof responseImage.images != 'undefined') {\n          if (typeof responseImage.images[0] != 'undefined') {\n            if (typeof responseImage.images[0].url != 'undefined') {\n              this.changeStorage('image_settings.image', responseImage.images[0].url, false);\n            }\n          }\n        }\n      }\n      this.isReferenceImageLoading = false;\n    }\n  },\n  data() {\n    return {\n      ai_image_url_downloading: '',\n      openDropdowns: {},\n      visibleImageButtons: {},\n      editToolOptions: constants.editTools,\n      imageUpscalingId: constants.image_upscaling_id,\n    };\n  },\n};\n</script>\n<template v-if=\"this.ai_single\">\n  <template v-if=\"this.ai_single != null\">\n    <template v-if=\"typeof this.ai_single[custom_key] != 'undefined'\">\n      <div :class=\"`ait-h-full ` + this.class\" :id=\"id != null ? id:''\" :data-key=\"custom_key\" v-if=\"this.ai_single[custom_key] != null\">\n        <template v-if=\"this.ai_single[custom_key]\" v-for=\"(value,key) in Object.values(this.ai_single[custom_key])\">\n          <div v-if=\"value\" :aria-details=\"`chat-key-${key}`\" :class=\"(value['role'] == 'system' || value['role'] == 'assistant' ? 'ait-bg-neutral-100 dark:ait-bg-neutral-900 dark:ait-text-gray-200':'')\">\n            <template v-if=\"value['role'] == 'system' || value['role'] == 'assistant'\">\n              <div class=\"ait-flex ait-p-2 ait-text-[10px] dark:ait-text-gray-200 ait-items-center ait-justify-between\">\n                <span class=\"ait-flex ait-items-center ait-space-x-2\"><img class=\"ait-w-4\" src=\"/public/assets/images/gpt.png\" alt=\"gpt-image\"> <span>{{ value['model'] }}</span></span>\n              </div>\n              <div class=\"dark:ait-bg-neutral-900 dark:ait-text-gray-200 ait-px-8 ait-py-4 ai_result_container\">\n                <div :class=\"`ai_result ${value['loading'] ? 'ai_loading':''}`\" v-html=\"AiApi.prefixify(AiApi.linkify(value['item'])).replace(/\\n/g, '<br\\/>')\"></div>\n                <div class=\"ait-flex ait-items-center ait-space-x-2 ait-float-right ait-cursor-pointer\" v-on:click=\"this.Helpers.copyClipboard(value['item'].replace(/<br\\/>/g, '\\n'))\">\n                  <svg-logo className=\"ait-w-3 ait-h-3\" name=\"clipboard\"/>\n                  <span>{{ __(\"copy\") }}</span>\n                </div>\n                <div class=\"ait-clear-both\"></div>\n              </div>\n            </template>\n            <template v-else-if=\"value['role'] == 'limit'\">\n              <div class=\"ait-px-3 ait-py-1 ait-bg-white dark:ait-bg-neutral-800 dark:ait-text-gray-200\">\n                <div class=\"ait-w-2/3 ait-py-4 ait-ml-auto ait-text-right\">\n                  {{ __(\"Your usage limit has been reached. Please upgrade your plan to continue using.\") }}\n                  <button type=\"button\" class=\"ait-text-white ait-bg-green-700 hover:ait-bg-green-800 focus:ait-outline-none focus:ait-ring-4 focus:ait-ring-green-300 ait-font-medium ait-rounded-full ait-text-sm ait-px-5 ait-py-1 ait-text-center ait-ml-5 ait-mr-2 dark:ait-bg-green-600 dark:hover:ait-bg-green-700 dark:focus:ait-ring-green-800 aitopia-pricing\">\n                    {{ __(\"Upgrade\") }}\n                  </button>\n                </div>\n              </div>\n            </template>\n            <template v-else-if=\"value['role'] == 'error'\">\n              <div class=\"ait-px-3 ait-py-1 ait-bg-white dark:ait-bg-neutral-800 ait-text-red-800 dark:ait-text-red-200\">\n                <div class=\"ait-py-4 ait-text-center ait-text-red-800 dark:ait-text-red-200\">\n                  {{ value['item'] }}\n                </div>\n              </div>\n            </template>\n            <template v-else-if=\"value['role'] == 'image'\">\n              <div class=\"ait-p-2 ai_result_container\" :style=\"mode === 'full' && 'max-width: 36rem'\">\n                <div class=\"ait-flex ait-items-center ait-justify-between ait-p-3 ait-space-x-3 ait-border ait-border-neutral-200 dark:ait-border-neutral-600 ait-rounded-xl ait-bg-neutral-100 dark:ait-bg-neutral-900 dark:ait-text-neutral-200\">\n                  <div class=\"\">\n                    <div :class=\"`ai_result ait-pb-3`\" v-html=\"AiApi.prefixify(AiApi.linkify(value['title'] ?? value['item'])).replace(/\\n/g, '<br\\/>')\"></div>\n                    <div v-if=\"value['images']\" :class=\"'ait-flex ait-grid ait-image-mode '+ (value['images'].length > 2 ? 'ait-grid-cols-2' : 'ait-grid-cols-'+value['images'].length)\">\n                      <div v-for=\"(image) in value['images']\" @mouseover=\"mouseOverImageButtonVisibility(image.url)\" @mouseleave=\"mouseLeaveImageButtonVisibility(image.url)\" class=\"ait-relative\">\n                        <template v-if=\"image.url\">\n                          <img :src=\"image.url\" :title=\"image.seed ?? ''\" :alt=\"image.seed ?? ''\" loading=\"lazy\"/>\n                          <div class=\"ait-flex ait-flex-row ait-absolute ait-top-0 ait-right-0 ait-mt-2 ait-h-[28px]\">\n                            <div v-if=\"visibleImageButtons[image.url]\" class=\"ait-flex ait-justify-end\">\n                              <button @click=\"generateImageVariations(image)\" class=\"ait-variations ait-flex ait-flex-row ait-text-black dark:ait-text-white ait-download-button ait-mr-1 ait-pt-[6px] items-center justify-center ait-text-[10px]\">\n                                <svg-logo class=\"ait-relative\" style=\"line-height: 13px;\" :name=\"'variants_icon'\"/>\n                                {{ __('Variations') }}\n                              </button>\n                              <button @click=\"showUpscaleModal(image)\" style=\"font-size: 10px; margin-right: 2px;padding-top: 6px;\" class=\"ait-flex ait-flex-row ait-text-black dark:ait-text-white ait-download-button\">\n                                <svg-logo class=\"ait-relative\" style=\"line-height: 13px;\" :name=\"'upscale_icon'\"/>\n                                {{ __('Upscale') }}\n                              </button>\n                              <svg-logo className=\"ait-mt-auto ait-h-7 ait-w-6 ait-download-button ait-cursor-pointer\" :name=\"'three_dots_icon'\" @click=\"toggleDropdown(image.url)\"/>\n                            </div>\n\n                            <div v-if=\"openDropdowns[image.url]\" @click.away=\"toggleDropdown(image.url)\" class=\"ait-mt-4 ait-absolute ait-right-0 ait-top-5 ait-z-50 ait-w-48 ait-bg-slate-100 dark:ait-bg-neutral-700 ait-rounded-md ait-shadow-lg\">\n                              <div @click=\"downloadImage(image.url, image.seed)\" class=\"ait-flex ait-flex-row ait-px-4 ait-py-2 ait-text-sm ait-text-black dark:ait-text-white hover:ait-bg-gray-300 hover:dark:ait-bg-neutral-800 ait-rounded-lg ait-cursor-pointer\">\n                                <svg-logo class=\"ait-ml-[2px] ait-mr-1 ait-mt-[1px]\" :name=\"'download_icon'\"/>\n                                {{ __('Download') }}\n                              </div>\n                              <div @click=\"setUseAsReference(image.url)\" class=\"ait-flex ait-flex-row ait-px-4 ait-py-2 ait-text-sm ait-text-black dark:ait-text-white hover:ait-bg-gray-300 hover:dark:ait-bg-neutral-800 ait-rounded-lg ait-cursor-pointer\">\n                                <svg-logo class=\"ait-ml-[2px] ait-mr-1 ait-mt-[1px]\" :name=\"'use_as_reference_icon'\"/>\n                                {{ __('Use as reference') }}\n                              </div>\n                              <div class=\"ait-flex ait-flex-row ait-px-4 ait-py-2 ait-text-sm ait-text-black dark:ait-text-white hover:ait-bg-gray-300 hover:dark:ait-bg-neutral-800 ait-rounded-lg ait-cursor-pointer\" @click=\"toggleEditModal(image)\">\n                                <svg-logo class=\"ait-mr-1 ait-mt-[1px] ait-white\" :name=\"'edit_icon'\"/>\n                                {{ __('Editing Tools') }}\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div v-if=\"ai_image_url_downloading === '' && visibleImageButtons[image.url]\">\n                              <button @click=\"downloadImage(image.url, image.seed)\" class=\"ait-absolute ait-bottom-[10px] ait-text-black dark:ait-text-white ait-download-button\">\n                                {{ __('Download') }}\n                              </button>\n                            </div>\n                            <div v-if=\"ai_image_url_downloading === image.url && visibleImageButtons[image.url]\">\n                              <button disabled class=\"ait-absolute ait-bottom-[10px] ait-text-black dark:ait-text-white ait-download-button\">\n                                {{ __('Downloading') }}\n                              </button>\n                            </div>\n                            <div>\n                              <!--\n                            <button v-for=\"(item) in this.image_editing\" @click=\"this.changeStorage('image_settings.action', item.id, false);this.changeStorage('image_settings.image', image.url, false);ImageAi.build(this,'image',(this.image_settings.prompt ?? ''), 'image',null);\" class=\"ait-text-white ait-download-button ait-text-xs\">\n                              {{ item.name }}\n                            </button>\n                            -->\n                            </div>\n                          </div>\n\n\n                        </template>\n                      </div>\n                    </div>\n                    <button v-if=\"(value['loading'] == false)\" class=\"ait-flex ait-rounded-full hover:ait-bg-[var(--ait-tab-menu-active-bg-color)] dark:hover:ait-bg-[var(--ait-tab-menu-active-bg-color)] hover:ait-text-white ait-px-1 ait-mt-3 ait-whitespace-nowrap\" @click=\"regenerateAiImage(value)\">\n                      <div class=\"ait-flex ait-flex-row ait-mt-2 ait-mx-auto hover:ait-text-white ait-regenerate\">\n                        <svg-logo className=\"ait-mb-2\" name=\"regenerate_icon\"/>\n                        <div class=\"ait-ml-1 ait-pb-2\">\n                          {{ __(`Regenerate`) }}\n                        </div>\n                      </div>\n                    </button>\n                  </div>\n                </div>\n                <div class=\"ait-flex ait-flex-row ait-mt-2 ait-ml-1\" v-if=\"value['loading']\">\n                  <div :class=\"`${value['loading'] ? 'ai_loading':''}`\"/>\n                  <div class=\"ait-ml-5\">\n                    {{ __(`Generating...`) }}\n                  </div>\n                </div>\n              </div>\n            </template>\n            <template v-else>\n              <div class=\"ait-px-3 ait-py-1 ait-bg-white dark:ait-bg-neutral-800 dark:ait-text-gray-200\">\n                <template v-if=\"Helpers.notUndefined(value,'title')\">\n                  <div class=\"ait-w-2/3 ait-py-4 ait-ml-auto ait-text-right\">\n                    <template v-if=\"(Helpers as any).filenameByFaIcon(value['title'], null) == 'lines'\">\n                      {{ value['title'] }}\n                    </template>\n                    <template v-else>\n                      <file-button :title=\"value['title']\"/>\n                    </template>\n                  </div>\n                </template>\n                <div class=\"ait-w-2/3 ait-py-4 ait-ml-auto ait-text-right\" v-else>\n                  {{ value['item'] }}\n                </div>\n              </div>\n            </template>\n            <div id=\"ait-continue-chat-ai_chat\" class=\"ait-continue-chat ait-flex ait-items-center ait-justify-center ait-absolute ait-w-full\" v-if=\"Helpers.notUndefined(value, 'finish_reason') == 'length'\">\n              <button :data-title=\"__('Continue')\" class=\"ait-text-white hover:ait-bg-green-800 ait-font-small ait-text-md ait-px-3 ait-py-1.5 ait-my-2 ait-rounded-md dark:hover:ait-bg-[var(--ait-tab-menu-active-bg-color)] ait-items-center ait-justify-center\">\n                <div class=\"ait-flex ait-w-full ait-gap-2 ait-items-center ait-justify-center\">\n                  <font-awesome-icon icon=\"fa-solid fa-play\" class=\"ait-h-4 ait-w-4\"/>\n                  {{ __('Continue generating') }}\n                </div>\n              </button>\n            </div>\n          </div>\n        </template>\n        <div id=\"ait-stop-chat-ai_chat\" class=\"ait-stop-chat ait-hide\">\n          <button class=\"ait-text-white hover:ait-bg-green-800 ait-font-medium ait-text-md ait-px-5 ait-py-2 ait-rounded-md dark:hover:ait-bg-[var(--ait-tab-menu-active-bg-color)] \">\n            <div class=\"ait-flex ait-w-full ait-gap-2 ait-items-center ait-justify-center\">\n              <svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon-xs\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n              </svg>\n              {{ __('Stop generating') }}\n            </div>\n          </button>\n        </div>\n      </div>\n    </template>\n  </template>\n</template>\n","<script lang=\"ts\">\nimport AiChat from '../vue/AiChat'\n\nexport default {\n  extends: AiChat,\n}\n</script>\n<template>\n  <div class=\"ait-h-full ait-mb-5 ait-max-w-[372px] ait-min-w-[360px]\" id=\"aitopia-search-container\" v-if=\"this.ai_single\">\n    <div class=\"ait-bg-neutral-100 dark:ait-bg-neutral-900 dark:ait-text-gray-200 ait-rounded-xl ait-px-4 ait-py-3 ait-border ait-border-gray-50 dark:ait-border-neutral-700\">\n      <div class=\"ait-flex\">\n        <div class=\"ait-w-11/12 ait-flex ait-gap-2 xl:ait-gap-3 ait-items-center\">\n          <div class=\"ait-logo ait-flex ait-w-7/12 ait-place-items-center\">\n            <svg-logo name=\"logo\" className=\"ait-w-7 ait-flex-initial\"/>\n            <div class=\"ait-logo-text\">\n              <div class=\"ait-font-bold ait-pl-1 ait-pr-2 ait-break-keep ait-text-sm\">ChatGPT Sidebar</div>\n            </div>\n          </div>\n          <div class=\"ait-credits ait-mr-3 ait-w-5/12\">\n            <!--<button data-dropdown-toggle=\"ait-credit-dropdown\" class=\"ait-flex ait-items-center ait-relative dark:ait-text-neutral-200 ait-border ait-rounded-full\">\n                  <img :src=\"`${constants.extension_dir}assets/images/coin.png`\" alt=\"coin image\" class=\"ait-w-4 ait-h-4\">\n                  <div class=\"ait-text-sm\" v-if=\"((this.credit_details??{})[this.settings.ai_model] ?? false) && (this.credit_details[this.settings.ai_model]['credit'] ?? 0) >= 0\">\n                    {{ this.credit_details[this.settings.ai_model]['balance'] ?? 10 }}\n                  </div>\n                  <span class=\"ait-text-sm\" v-else>∞</span>\n                </button>-->\n            <button type=\"button\" class=\"ait-text-neutral-500 dark:ait-text-neutral-300 ait-border-2 ait-border-solid ait-border-[var(--ait-tab-menu-active-bg-color)] hover:ait-bg-[var(--ait-tab-menu-active-bg-color)] hover:ait-text-white ait-rounded-lg focus:ait-outline-none ait-text-xs ait-p-2 ait-text-center aitopia-ask-search\">\n              {{ __(\"Ask ChatGPT\") }}\n            </button>\n            <!--<button type=\"button\" class=\"ait-text-neutral-500 hover:ait-bg-green-300 ait-rounded-lg focus:ait-outline-none ait-text-xs ait-px-2 ait-py-0 ait-text-center aitopia-pricing\">\n                  {{ __(\"Upgrade\") }}\n                </button>-->\n          </div>\n        </div>\n        <div class=\"ait-w-1/12 ait-flex ait-grid ait-grid-cols-1 ait-gap-3 ait-items-center\">\n          <div class=\"ait-switchbar-tab-item ait-gap-3 ait-place-items-end ait-rounded-lg ait-p-2 ait-cursor-pointer arc-edge aitopia-options-search\">\n            <font-awesome-icon icon=\"fa-solid fa-gear\" class=\"ait-h-4 ait-w-4\"/>\n          </div>\n        </div>\n      </div>\n      <single-response v-if=\"this.ai_extra_key\" class=\"ait-pt-3 ait-pb-2\" id=\"aitopia-search-result\" :custom_key=\"this.ai_extra_key\"/>\n    </div>\n  </div>\n</template>\n","<script lang=\"ts\">\nimport AiChat from '../vue/AiChat'\n\nexport default {\n  extends: AiChat,\n}\n</script>\n<template>\n  <div class=\"ait-h-full ait-mb-5 ait-max-w-[372px] ait-min-w-[360px]\" id=\"aitopia-search-container\" v-if=\"this.ai_single\">\n    <div class=\"ait-bg-neutral-100 dark:ait-bg-neutral-900 dark:ait-text-gray-200 ait-rounded-xl ait-px-4 ait-py-3 ait-border ait-border-gray-50 dark:ait-border-neutral-700\">\n      <div class=\"ait-flex\">\n        <div class=\"ait-w-11/12 ait-flex ait-gap-2 xl:ait-gap-3 ait-items-center\">\n          <div class=\"ait-logo ait-flex ait-w-7/12 ait-place-items-center\">\n            <svg-logo name=\"logo\" className=\"ait-w-7 ait-flex-initial\"/>\n            <div class=\"ait-logo-text\">\n              <div class=\"ait-font-bold ait-pl-1 ait-pr-2 ait-break-keep ait-text-sm\">ChatGPT Sidebar</div>\n            </div>\n          </div>\n          <div class=\"ait-credits ait-mr-3 ait-w-5/12\">\n            <!--<button data-dropdown-toggle=\"ait-credit-dropdown\" class=\"ait-flex ait-items-center ait-relative dark:ait-text-neutral-200 ait-border ait-rounded-full\">\n                  <img :src=\"`${constants.extension_dir}assets/images/coin.png`\" alt=\"coin image\" class=\"ait-w-4 ait-h-4\">\n                  <div class=\"ait-text-sm\" v-if=\"((this.credit_details??{})[this.settings.ai_model] ?? false) && (this.credit_details[this.settings.ai_model]['credit'] ?? 0) >= 0\">\n                    {{ this.credit_details[this.settings.ai_model]['balance'] ?? 10 }}\n                  </div>\n                  <span class=\"ait-text-sm\" v-else>∞</span>\n                </button>-->\n            <button type=\"button\" class=\"ait-text-neutral-500 dark:ait-text-neutral-300 ait-border-2 ait-border-solid ait-border-[var(--ait-tab-menu-active-bg-color)] hover:ait-bg-[var(--ait-tab-menu-active-bg-color)] hover:ait-text-white ait-rounded-lg focus:ait-outline-none ait-text-xs ait-p-2 ait-text-center aitopia-ask-search\">\n              {{ __(\"Ask ChatGPT\") }}\n            </button>\n            <!--<button type=\"button\" class=\"ait-text-neutral-500 hover:ait-bg-green-300 ait-rounded-lg focus:ait-outline-none ait-text-xs ait-px-2 ait-py-0 ait-text-center aitopia-pricing\">\n                  {{ __(\"Upgrade\") }}\n                </button>-->\n          </div>\n        </div>\n        <div class=\"ait-w-1/12 ait-flex ait-grid ait-grid-cols-1 ait-gap-3 ait-items-center\">\n          <div class=\"ait-switchbar-tab-item ait-gap-3 ait-place-items-end ait-rounded-lg ait-p-2 ait-cursor-pointer arc-edge aitopia-options-search\">\n            <font-awesome-icon icon=\"fa-solid fa-gear\" class=\"ait-h-4 ait-w-4\"/>\n          </div>\n        </div>\n      </div>\n      <single-response v-if=\"this.ai_extra_key\" class=\"ait-pt-3 ait-pb-2\" id=\"aitopia-search-result\" :custom_key=\"this.ai_extra_key\"/>\n    </div>\n  </div>\n</template>\n","/*Start Components*/\nimport AiSideBar from \"../pages/AiSideBar.vue\";\nimport AiResponse from \"../components/AiResponse.vue\";\nimport Navigation from \"../components/Navigation.vue\";\nimport Switchbar from \"../components/Switchbar.vue\";\nimport SvgLogo from \"../components/SvgLogo.vue\";\nimport Credit from \"../components/Credit.vue\";\nimport Modal from \"../components/Modal.vue\";\nimport Prompts from \"../components/Prompts.vue\";\nimport Write from \"../components/Write.vue\";\nimport SingleResponse from \"../components/SingleResponse.vue\";\nimport PDFUpload from \"../components/PDFUpload.vue\";\nimport MakeAReview from \"../components/MakeAReview.vue\";\nimport MakeAReviewModal from \"../components/MakeAReviewModal.vue\";\nimport StyleOptionsModal from \"../components/StyleOptionsModal.vue\";\nimport EditToolsModal from \"../components/EditToolsModal.vue\";\nimport UploaderElement from \"../components/UploaderElement.vue\";\nimport ImageChatSettings from \"../components/ImageChatSettings.vue\";\nimport ImageChatSettingsModal from \"../components/ImageChatSettingsModal.vue\";\nimport ReferenceImage from \"../components/ReferenceImage.vue\";\nimport ImagePreview from \"../components/ImagePreview.vue\";\nimport ImageAiResponse from \"../components/ImageAiResponse.vue\";\nimport Painter from \"../components/Painter.vue\";\nimport EditToolsUploadModal from \"../components/EditToolsUploadModal.vue\";\nimport EditToolsUploadModalActionSection from \"../components/EditToolsUploadModalActionSection.vue\";\nimport InnerReferenceImage from \"../components/InnerReferenceImage.vue\";\nimport InnerImagePreview from \"../components/InnerImagePreview.vue\";\nimport InnerContentView from \"../components/InnerContentView.vue\";\nimport SearchResponse from \"../components/SearchResponse.vue\";\nimport FileButton from \"../components/FileButton.vue\";\nimport HoverPopover from \"../components/HoverPopover.vue\";\nimport VisionToolbar from \"../components/VisionToolbar.vue\";\nimport VisionImagePreview from \"../components/VisionImagePreview.vue\";\nimport InviteFriends from \"../components/InviteFriends.vue\";\nimport UpgradePlanModal from \"../components/UpgradePlanModal.vue\";\nimport {FontAwesomeIcon} from '@fortawesome/vue-fontawesome'\n/* import specific icons */\nimport {library} from '@fortawesome/fontawesome-svg-core'\n//import {fab} from '@fortawesome/free-brands-svg-icons'\nimport {fas} from '@fortawesome/free-solid-svg-icons'\nimport {far} from '@fortawesome/free-regular-svg-icons'\n//library.add(fab)\nlibrary.add(fas)\nlibrary.add(far)\nexport {\n    AiSideBar,\n    AiResponse,\n    Navigation,\n    Switchbar,\n    SvgLogo,\n    Credit,\n    Modal,\n    Prompts,\n    Write,\n    SingleResponse,\n    PDFUpload,\n    MakeAReview,\n    MakeAReviewModal,\n    StyleOptionsModal,\n    EditToolsModal,\n    UploaderElement,\n    ImageChatSettings,\n    ImageChatSettingsModal,\n    ReferenceImage,\n    ImagePreview,\n    ImageAiResponse,\n    Painter,\n    EditToolsUploadModal,\n    EditToolsUploadModalActionSection,\n    InnerReferenceImage,\n    InnerImagePreview,\n    InnerContentView,\n    SearchResponse,\n    FileButton,\n    HoverPopover,\n    VisionToolbar,\n    VisionImagePreview,\n    InviteFriends,\n    UpgradePlanModal,\n    FontAwesomeIcon,\n};"],"names":["_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_createElementVNode","_openBlock","_createElementBlock","_Fragment","_createVNode","_component_EditToolsModal","_component_EditToolsUploadModal","_component_navigation","_createCommentVNode","_component_prompts","_component_write","_component_painter","_component_InnerContentView","_component_switchbar","_component_MakeAReviewModal","_normalizeStyle","_cache","$event","_component_font_awesome_icon","_component_svg_logo","_sfc_main$2","AiChat","_renderList","file","key","_component_file_button","_toDisplayString","_sfc_main$1","value","prompt","AiApi","ImageAi","url","seed","id","image","imageJson","e","responseImage","constants","_imports_0","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_18","_hoisted_21","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_36","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_resolveComponent","$props","_normalizeClass","_createTextVNode","_ctx","_hoisted_15","_hoisted_16","_hoisted_17","$options","_hoisted_19","_hoisted_20","$data","_hoisted_22","_hoisted_23","_hoisted_25","_hoisted_26","_hoisted_28","_hoisted_34","_createBlock","_sfc_main","_component_single_response","library","fas","far"],"mappings":"+aAQU,MAAAA,GAAA,CAAmE,IAAK,EAAA,GAAA,2CAEpEC,GAAY,CAAA,GAAA,mBAACC,GAAM,CAAA,GAAA,yEACpBC,GAAM,CAAkD,IAAG,EAAA,MAAA,yEAK3DC,GAAM,CAAkD,IAAG,EAAA,MAAA,wEAM3DC,GAAM,CAAkD,IAAG,EAAA,MAAA,0EAM3DC,GAAM,CAAkD,IAAG,EAAA,MAAA,4EAM3DC,GAAM,CAAkD,IAAG,EAAA,MAAA,+EAoBjEC,GAAA,CAAA,IAAA,0BAIKC,GAAAC,EAAA,WAAA,CAA4F,GAAA,gBAAA,MAAA,CAAA,SAAA,QAAA,OAAA,QAAA,UAAA,KAAA,OAAA,MAAA,MAAA,MAAA,YAAA,MAAA;qUAnDtGC,EAAuB,EAAAC,EAAAC,EAAA,KAAA,CAAAC,EACgBC,CAA0B,EAoC3DD,EAAAE,CAAA,EAAA,KAnCJ,oCA+BQJ,EAAA,MAAAZ,GAAA,CAAAU,EA5BqB,MAAST,GAAA,CADlCS,EAAA,MAAAR,GAAA,CAEE,KAAA,SAAA,WAAyB,QACzBS,EAAA,EAAwCC,EAAtB,MAAAT,GAAA,CAAAW,EAAAG,EAAA,CAAA,KAAA,MAAA,CAAA,6BAEpB,CAAA,GAAAC,EAAA,GAAA,EAAA,EAEE,KAAA,SAAA,WAAwB,WACdN,EAAA,MAAAR,GAAA,CACVU,EAAgBG,EAAA,CAAA,KAAA,KAAA,CAAA,EAAAH,EAAAK,CAAA,MAElB,CAAA,GAAAD,EAAA,GAAA,EAAA,EAEE,KAAA,SAAA,WAA0B,aAClBN,EAAA,MAAAP,GAAA,CACRS,EAAgBG,EAAA,CAAA,KAAA,OAAA,CAAA,EAAAH,EAAAM,CAAA,MAElB,CAAA,GAAAF,EAAA,GAAA,EAAA,EAEE,KAAA,SAAA,WAA0B,aAChBN,EAAA,MAAAN,GAAA,CACVQ,EAAgBG,EAAA,CAAA,KAAA,OAAA,CAAA,EAAAH,EAAAO,CAAA,MAElB,CAAA,GAAAH,EAAA,GAAA,EAAA,EAEE,KAAA,SAAA,WAA2B,kBAC4DN,EAAA,MAAAL,GAAA,CAAAO,EAA3DG,EAAS,CAAA,KAAA,QAAA,CAAA,EAAAH,EAAaQ,EAAwB,CAAA,WAAA,4EAE5E,CAAA,GAAAJ,EAAA,GAAA,EAAA,EAEFJ,EAAmBS,CAAA,CAAA,CACnB,EAAAT,EAAAU,CAAA,QAGJ,CAAA,GAAON,EAAC,GAAwB,EAAA,EAAOR,EAAA,MAAA,CACjC,GAAA,yBAAA,MAAA,qBACJ,MAEMe,EAAA,KAAA,SAAA,oBAAA,GAAA,gBAAA,EAAA,CAAA,EAAA,CAFiCf,EAAA,MAAA,CAAA,MAAA,kBACrC,QAA4EgB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAA,KAAA,cAAA,yBAAA,EAAA,EAAA,GAAnBC,EAAiB,CAAA,KAAA,kDAE5E,CAAA,CAAA,CAAA,EAAmClB,EAAA,MAAA,CAAA,MAAA,cACjC,QAA6DgB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAA,KAAA,cAAA,GAAAA,CAAA,EAAA,EAAA,CAA7Bb,EAAAe,EAAA,CAAA,KAAA,qDAIlC,KAAA,SAAA,iBAAAlB,EAAA,EAAAC,EAAA,MAAAJ,GAAA,KAEF,CAAA,GAAAU,EAAA,GAAA,EAAA,wCCtDaY,GAAA,CACb,QAASC,EACT,MAAO,CACE,MAAA,CACL,MAAO,CAAC,CAAA,CAEZ,CACF,MCYW,MAAM,gOATJpB,EAAO,EAAAC,EAAAC,EAAA,KAAA,CAAAH,EAAO,QAAc,CAAE,KAAA,OAAsJ,MAAA,eAAA,SAAAgB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAA,+IAG/L,EAAA,EAAS,KAAK,EAAA,EAA2DjB,EAAA,SAAA,CAE/C,QAAAgB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAA,KAAA,SAAA,YAAA,gBAAA,OAAA,EAAA,EAAA,OAAA,gBAEtB,EAAiD,EAAAf,EAAAC,EAAA,CAAA,IAAA,CAAA,EAAAmB,EAAA,KAAA,MAAA,CAAAC,EAAAC,KAAnCvB,EAAgB,EAAAC,EAAA,MAAAZ,GAAA,CAAAc,EAAaqB,EAAG,CAAA,MAAAF,EAAA,KAC9C,IAAAA,EAAA,qBAGM,KAFN,CAAA,EAAAvB,EACE,MAA0LT,GAAAmC,EAAAH,EAAA,QAAA,EAAA,CAAA,EAA/KvB,EAAA,MAAAR,GAAA,CAA0EQ,EAAA,MAAA,CAAA,MAAA,6NCjB9E2B,GAAA,CACb,QAASN,EACT,MAAO,CAAC,KAAM,aAAc,QAAS,MAAM,EAC3C,QAAS,CACP,kBAAkBO,EAAO,CACvB,MAAMC,EAASC,EAAM,UAAUA,EAAM,QAAQF,EAAM,IAAO,CAAC,EAAE,QAAQ,MAAO,OAAQ,EACpF,YAAK,eAAe,OAASC,EACtBE,EAAQ,MAAM,KAAM,QAAS,KAAK,eAAe,OAAQ,QAAS,KAAOH,EAAM,OAAY,KAAQA,EAAM,YAAiB,EAAG,EAAE,KAAK,KAAK,eAAe,OAAS,IAAI,CAC9K,EACA,MAAM,cAAcI,EAAKC,EAAM,CAC7B,KAAK,yBAA2BD,EAChC,MAAM,KAAK,YAAYA,EAAM,YAAaC,EAAO,MAAM,EACvD,KAAK,yBAA2B,EAClC,EACA,kBAAkBD,EAAa,CACxB,KAAA,cAAc,uBAAwBA,EAAK,EAAK,EACrD,KAAK,sBAAwB,EAE/B,EACA,eAAeE,EAAI,CACjB,KAAK,cAAcA,CAAE,EAAI,CAAC,KAAK,cAAcA,CAAE,CACjD,EACA,+BAA+BA,EAAI,CAC7B,KAAK,oBAAoBA,CAAE,IAI1B,KAAA,oBAAoBA,CAAE,EAAI,GACjC,EACA,gCAAgCA,EAAI,CAC9B,GAAA,KAAK,oBAAoBA,CAAE,EAAG,CAC3B,KAAA,oBAAoBA,CAAE,EAAI,GAC1B,KAAA,cAAcA,CAAE,EAAI,GACzB,MACF,CACF,EACA,gBAAgBC,EAAO,CACjB,KAAK,qBACP,KAAK,mBAAqB,IAGxB,KAAK,0BACP,KAAK,wBAA0B,IAG3B,MAAAC,EAAY,KAAK,UAAUD,CAAK,EACzB,aAAA,QAAQ,4BAA6BC,CAAS,EACtD,KAAA,mBAAqB,CAAC,KAAK,kBAClC,EACA,iBAAiBD,EAAO,CACjB,KAAA,cAAc,wBAAyB,kBAAmB,EAAK,EAC/D,KAAA,aAAe,KAAK,gBAAgB,QAAUE,EAAE,KAAO,KAAK,gBAAgB,EACjF,KAAK,aAAe,EACd,MAAAD,EAAY,KAAK,UAAUD,CAAK,EACzB,aAAA,QAAQ,4BAA6BC,CAAS,EAC3D,KAAK,mBAAqB,GAC1B,KAAK,wBAA0B,EACjC,EACA,MAAM,wBAAwBD,EAAO,CACnC,KAAK,wBAA0B,GAE1B,KAAA,cAAc,wBAAyB,YAAa,EAAK,EAC9D,KAAK,cAAc,uBAAwBA,GAAO,IAAK,EAAK,EAEtD,MAAAG,EAAgB,MAAMP,EAAQ,MAAM,KAAM,QAAS,KAAM,QAAS,KAAM,WAAW,EAEzF,KAAK,eAAe,OAAS,KACzBO,GACE,OAAOA,EAAc,OAAU,KAC7B,OAAOA,EAAc,OAAO,CAAC,EAAK,KAChC,OAAOA,EAAc,OAAO,CAAC,EAAE,IAAO,KACxC,KAAK,cAAc,uBAAwBA,EAAc,OAAO,CAAC,EAAE,IAAK,EAAK,EAKrF,KAAK,wBAA0B,EACjC,CACF,EACA,MAAO,CACE,MAAA,CACL,yBAA0B,GAC1B,cAAe,CAAC,EAChB,oBAAqB,CAAC,EACtB,gBAAiBC,EAAU,UAC3B,iBAAkBA,EAAU,kBAAA,CAEhC,CACF,WCSwB,UAAC,EACGhD,GAAA,CAAA,cAAA,EAAmHC,GAAA,CAAA,MAAA,gGAApEC,GAAe,CAAA,MAAA,2CAAoCC,GAAAM,EAAA,MAAA,CAAC,MAAI,UAAA,IAAAwC,2MAYhHzC,GAAM,CAAA,IAAA,yFAGK0C,GAAS,CAAA,MAAA,iDAACC,GAAM,CAAA,KAAA,2UAO3BC,GAAM,CAAA,IAAA,yGASFC,GAAA,CAAA,MAAM,qUAMQC,GAAA,CAAA,cAAA,cAAA,uHACkCC,GAAM,CAAA,IAAA,wJAkCvCC,GAAQ,CAAA,IAAA,GAACC,GAAM,CAAA,SAAA,kGAkBpBC,GAAAjD,EAAA,MAAA,KAAA,KAAA,EAAA,EAEEkD,GAAA,CAAA,SAAA,6HAOdC,GAAM,CAAA,IAAA,yEASRC,GAAM,CAAA,IAAA,yFAEFC,GAAM,CAAA,IAAA,yDASRC,GAAM,CAAA,IAAA,yDAKPC,GAAA,CAA4B,IAAK,EAAA,GAAA,8IAUrCC,GAAuB,CAAA,MAAA,qEAACC,GAAM,CAAA,GAAA,wDAK1BC,GAAA,CAAA,MAAA,8JAFDC,GAAO,CAAc,MAAA,qEAAKC,GAAO5D,EAAA,MAAA,CAAC,OAAA,eAAiB,KAAA,OAAoB,eAAc,IAAS,QAAA,YAAwB,iBAAe,QAAC,kBAAY,QAAC,MAAM,UAAM,OAAM,MAAA,MAAA,2CACvJA,EAAA,OAAA,CAAC,EAAA,IAAW,EAAA,IAAY,MAAM,KAAC,OAAM,KAAA,GAAA,oFAjJtCkB,EAAA2C,EAAA,mBAAA,EACA,OAAA,KAAA,WAAA,MAAA5D,EAAA,EAAAC,EAA5BC,EAuJW,CAAA,IAAA,GAAA,CAtJ2F,OAAA,KAAA,UAAU2D,EAAU,UAAA,EAAA,KAAA7D,EAAA,EAAAC,EAAxHC,EAqJM,CAAA,IAAA,CAAA,EAAA,CArJK,KAAA,UAAA2D,EAAA,UAAA,GAAA,MAAA7D,EAAA,EAAAC,EAAA,MAAA,CAA+B,IAAI,EAAqB,QAAU,cAAU,KAAA,KAAA,EAAA,GAAA4D,EAAA,IAAA,KAAAA,EAAA,GAAA,cAChEA,EAAU,UAAA,EAAA,CACb,KAAA,UAAAA,EAAA,UAAA,GAAA7D,EAAA,EAAA,EAAAC,EAAAC,EAAA,CAAA,IAAA,GAAAmB,EAAA,OAAA,OAAA,KAAA,UAAAwC,EAAA,UAAA,CAAA,EAAA,CAAAlC,EAAAJ,SAAhBtB,EAuIMC,EAAA,KAAA,CAAAyB,GAAA3B,EAAA,EAvI0CC,EAAA,MAAA,CAAK,IAAK,EAAA,eAAA,YAAAsB,CAAA,GACnC,MAAAuC,EAAAnC,EAAwB,MAAK,UAAAA,EAAA,MAAA,YAAA,oEAAA,EAAA,CAAA,EAAA,GAChD,MAEM,UAAAA,EAFN,MAEM,aAAA3B,EAAA,EADoKC,EAAAC,EAAA,CAAA,IAAA,CAAA,EAAA,CAAzCH,EAAA,MAAAR,GAAA,CAAAQ,EAAA,OAAAP,GAAA,CAACC,GAAAsE,EAAA,6BAElI,CAAA,CAAA,CAAA,EACahE,EAAA,MAAAL,GAAA,CAAAK,EAA6D,MAAM,CAAA,MAAA+D,EAAA,aAAAnC,EAAA,QAAA,aAAA,EAAA,EAAA,EAC9E,UAGMqC,EAAA,MAAA,UAAAA,EAAA,MAAA,QAAArC,EAAA,IAAA,CAAA,EAAA,QAAA,MAAA,OAAA,CAAA,EAHD,KAAM,GAAAhC,EAAA,EAAAI,EAAuF,MAAO,CAAA,MAAA,6EACvG,QAAwDiB,GAAA,KAAA,QAAA,cAAAW,EAAA,KAAA,QAAA,UAAA;AAAA,CAAA,CAAA,CAAA,EAAA,GAAbT,EAAW,CAAA,UAAA,kBACtD,KAAA,WAAA,CAAA,EAEFnB,EAAkC,OAAA,KAAA0B,EAAAuC,EAAA,GAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,EAAApE,EAAA,IAGjB,CAAA,CAAA,EAAA,EAAA,GAAA+B,EAEjB,2BACK7B,GAAE,CAAAC,EACL,MAESyC,GAFT,CAAAuB,EAAAtC,EAAAuC,EAAA,GAAA,gFAAA,CAAA,EAAA,IAAA,CAAA,qCAMe,CAAA,CAAA,CAEjB,GAAArC,EAAA,MAAA,SAAA3B,IAAAC,EAAA,MAAAyC,GAAA,CAKiB3C,EAAK,MAAA4C,GAAAlB,EAAAE,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA,GAAAA,EAAA,MAAA,SAAA3B,EACgB,EAAAC,EAAA,MAAA,CAAE,IAAK,EAAA,MAAA,8BAC7C,MAAAa,EAoEM+C,EApEN,OAoEM,QAAA,kBAAA,CAAA,EAAA,GAlEF,MAA2II,GAAA,CAAAlE,EAAhI,MAAEmE,GAAA,CAAAnE,EAA8B,MAAM,CAAA,MAAA+D,EAAA,oBAAA,EACtC,UAAKE,EAAA,MAAA,UAAAA,EAAA,MAAA,QAAArC,EAAA,OAAAA,EAAA,IAAA,CAAA,EAAA,QAAA,MAAA,OAAA,CAAA,EAAhB,KAAA,EAAAwC,EAAA,EAAkCxC,EAAA,QAAA3B,EAAA,EAAAC,EAAA,MAAA,CAAA,IAAA,UAChC,qCAqDM0B,EAAA,cArDO,EAAK,kBAAA,iBAAAA,EAAA,OAAA,OAAA,CAAA,EAAA,IAAuB,EAAS,EAAA1B,EAAEC,EAA+B,KAAAmB,EAAAM,EAAM,OAAGO,IAAIlC,EAAA,EAAYC,EAAA,MAAA,CAA4C,YAAoBe,GAAAoD,EAAA,+BAAAlC,EAAA,GAAA,EAAA,aAAAlB,GAAAoD,EAAA,gCAAAlC,EAAA,GAAA,EACpJ,MAAA,cAAA,EAAA,CACpBA,EAAA,KAAAlC,IAAiBC,EAAGC,EAAA,CAAA,IAAA,GAAA,CAAoBH,EAAA,MAAA,CAAS,IAAKmC,EAAM,IAAY,MAAOA,EAAC,MAAM,GAAA,IAAAA,EAAA,MAAA,GACtF,QAAA,MAAA,EACa,KAAA,EAAAmC,EAAA,EAAXtE,EAAA,MAAAuE,GAAA,CACEC,EAAA,oBAGSrC,YAHOjC,EAAA,MAAA4C,GAAA,CAAsC9C,EAAA,SAAA,CAAA,QAAAiB,GAAAoD,EAAA,wBAAAlC,CAAA,EACpD,MAAA,+JAAA,EAAA,GAA+BhB,EAA0B,CAAE,MAAM,eAAA,MAAA,CAAA,cAAA,MAAA,yBAGnE6C,EAGS,IAAAtC,EAAAuC,EAAA,GAAA,YAAA,CAAA,EAAA,CAAA,CAAA,EAHA,EAAKQ,EAAA,EAA2BzE,EAAA,SAAA,CAA6D,QAAMiB,GAAAoD,EAAA,iBAAAlC,CAAA,EAAA,MAAA,CAAA,YAAA,OAAA,eAAA,MAAA,cAAA,KAAA,EAC1G,MAAA,8EAAA,EAAA,GAA+BhB,EAA0B,CAAE,MAAM,eAAA,MAAA,CAAA,cAAA,MAAA,wBAGnE6C,EAAuJ,IAAAtC,EAAAuC,EAAA,GAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAA7I,EAAUS,EAAA,EAAAtE,EAA4Ee,EAAiB,CAAG,UAAK,qEAAA,KAAA,0EAG3H,GAAAX,EAAA,GAAA,EAAA,EAAAgE,EAAA,cAAArC,EAAA,GAAA,GAAAlC,EAAkD,EAAAC,EAAA,MAAA,CAA2B,IAAK,EAAA,QAAAe,GAAAoD,EAAA,eAAAlC,EAAA,GAAA,EAChF,MAAA,qIAAA,EAAA,CAAyDnC,EAAA,MAAA,CAAA,QAAAiB,GAAAoD,EAAA,cAAAlC,EAAA,IAAAA,EAAA,IAAA,EACvD,MAAA,8KAAA,EAAA,GAA4DhB,EAAe,CAAA,MAAA,4DAG7E6C,EAGM,IAAAtC,EAAAuC,EAAA,GAAA,UAAA,CAAA,EAAA,CAAA,CAAA,EAHA,EAAKU,EAAA,EAAsC3E,EAAA,MAAA,CAAA,QAAAiB,GAAAoD,EAAA,kBAAAlC,EAAA,GAAA,EAC/C,MAAA,8KAAA,EAAA,GAA4DhB,EAAuB,CAAA,MAAA,oEAGrF6C,EAGM,IAAAtC,EAAAuC,EAAA,GAAA,kBAAA,CAAA,EAAA,CAAA,CAAA,EAHD,EAAMW,EAAA,EAAA5E,EAAqL,MAAE,CAAA,MAAA,+KAChM,QAAuEiB,GAAAoD,EAAA,gBAAAlC,CAAA,CAAA,EAAA,GAAdhB,EAAW,CAAA,MAAA,sGAK1EX,EAkBM,GAAA,EAAA,CAAA,CAAA,EAjBJR,EAAA,MAAA,KAAA,CACEwE,EAAA,2BAES,IAFKA,EAAA,oBAAArC,EAAA,GAAA,GAAAlC,EAAA,EAAAC,EAAE,MAAoB2E,GAAA,CAAwB7E,EAAA,SAAA,CAAA,QAAAiB,GACvDoD,EAAE,cAAAlC,EAAA,IAAAA,EAAA,IAAA,EAAA,MAAA,mHAGT,GAAA3B,EAAA,GAAA,EAAA,EAAAgE,EACE,kCAESA,EADF,oBAAArC,EAAA,GAAA,GAAAlC,EAAA,EAAAC,EAAA,MAAA6C,GAAA,wCAGT,CAAA,GAAAvC,EAAA,GAAA,EAAA,qCAaO,EAAK,CAApB,GAAAA,EAAA,GAAA,EAAA,EAAiDoB,EAAA,SAAA,IAAA3B,EAAA,EAAAC,EAAA,SAAA,CAAqM,IAAA,EAAA,MAAA,oMACpP,QAAAe,GAKMoD,EALN,kBAKMzC,CAAA,CAAA,EAAA,GAJgB,MAAUkD,GAAA,CAAA1E,EAAMe,EAAiB,CAAA,UAAA,WACrD,KAAA,iBAAA,CAAA,wDAOmD,CAAA,CAAA,CAAA,EACzDS,EAAA,SAAA3B,EAAqB,EAAAC,EAAA,MAAAiD,GAAA,CAAAnD,EAAA,MAAA,CACrB,MAEM+D,EAAA,GAFNnC,EAEM,QAAA,aADD,EAAE,EAAA,CAAA,EAAA,KAAA,CAAA,wCAMX,CAAA,GAAApB,EAAA,GAAA,EAAA,CAAA,EACkB,CAAA,IAAAP,EAAA,EAAAC,EACd,MAOMkD,GAPN,CACmBa,EAAA,QAAA,aAAOrC,EAAS,OAAA,GAAA3B,IAAAC,EAAjC,MAEWmD,GAAA,CAAAY,EAAA,QAAA,iBADNrC,EAAK,MAAA,IAAA,GAAA,SAAA3B,EAAA,EAAAC,EAAAC,EAAA,CAAA,IAAA,CAAA,EAAA,GAGRuB,EAAsCE,EAAA,KAAA,EAAA,CAAA,CAAA,EAAA,EAAA,IAAA3B,IAAZ8E,EAAAtD,EAAA,CAAA,IAAA,eAIhC,EAAA,KAAA,EAAA,CAAA,OAAA,CAAA,EAAA,CAAA,IAK6IxB,IAAkBC,EAAA,MAAAoD,GAAA5B,EAAAE,EAAA,IAAA,EAAA,CAAA,EAAA,CAAA,GACjKqC,EAAA,QAAA,aAKSrC,gCALc,EAAA1B,EAAA,MAAAqD,GAAA,CAAoBvD,EAAA,SAAA,CAAA,aAAAiE,EAAA,GAAA,UAAA,EACzC,MAAA,0MAAA,EAAA,GAC0B,MAAkBT,GAAA,CAAApD,EAAOc,EAAiB,CAAA,KAAA,iIAO5E,EAAA,GAAA,GACEV,EAOS,GAPT,EAAA,EAAAR,EACE,MAKMyD,GALN,CAGQzD,EAAA,SAAA0D,GAAA,CACN1D,EAAA,MAAA2D,GAAA,CAAAC,4HCjPCoB,GAAA,CACb,QAAS3D,CACX,ECGO/B,GAAM,CAA0D,IAAG,EAAA,MAAA,yFAG7DC,GAAA,CAAA,MAAM,oKACJ,MAAM,YAEiBE,GAAA,CAAA,MAAA,mEACxB,CAAW,MAAA,6FAGJ,MAAiC,CAAA,MAAA,4DAAA,EAAA,iBAAA,OAQ9BG,GAAS,CAAA,MAAA,mCAACC,GAAM,CAAA,KAAA,8lBAlBiFoF,EAAApB,EAAA,iBAAA,EACrH,OAAA,KAAA,WAAA5D,EA8BQ,EAAAC,EAAA,MAAAZ,GAAA,CAAAU,EA5BJ,MAsBMT,GAtBN,CAAAS,EACE,MAKMR,GALN,CAC8DQ,EAAA,MAAAP,GAAA,CAAvCO,EAAA,MAAAN,GAAA,CAAWU,EAAAe,EAAA,CAAA,KAAA,OAChC,UAEM,0BAAA,CAAA,EAERxB,EAAA,CAAA,qDAgBF,CAAA,CAAA,CAAA,EAEwEK,EAAA,MAAAF,GAAA,CAAAE,EAA5C,MAAkBD,GAAA,CAAAK,EAAOc,EAAiB,CAAA,KAAA,0EAIL6D,EAAAE,EAAA,CAAC,IAAG,EAAyB,MAAA,oBAAA,GAAA,oICEtGC,EAAQ,IAAIC,CAAG,EACfD,EAAQ,IAAIE,CAAG"}